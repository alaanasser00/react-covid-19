{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Salam\\\\react-learnspace\\\\react-covid-19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Salam\\\\react-learnspace\\\\react-covid-19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Salam\\\\react-learnspace\\\\react-covid-19\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createContext,useState,useEffect}from'react';import axios from'axios';export var DataContext=createContext();var DataContextProvider=function DataContextProvider(_ref){var children=_ref.children;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),worldwideData=_useState2[0],setWorldwideData=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),worldHistCases=_useState4[0],setWorldHistCases=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),worldHistDeaths=_useState6[0],setWorldHistDeaths=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),worldHistRecovered=_useState8[0],setWorldHistRecovered=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),showWorldwideData=_useState10[0],setShowWorldwideData=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),countriesData=_useState12[0],setCountriesData=_useState12[1];var _useState13=useState({country:\"Morocco\"}),_useState14=_slicedToArray(_useState13,2),countryData=_useState14[0],setCountryData=_useState14[1];var _useState15=useState({country:\"Morocco\"}),_useState16=_slicedToArray(_useState15,2),countryHist=_useState16[0],setCountryHist=_useState16[1];var _useState17=useState({}),_useState18=_slicedToArray(_useState17,2),countryHistCases=_useState18[0],setCountryHistCases=_useState18[1];var _useState19=useState({}),_useState20=_slicedToArray(_useState19,2),countryHistDeaths=_useState20[0],setCountryHistDeaths=_useState20[1];var _useState21=useState({}),_useState22=_slicedToArray(_useState21,2),countryHistRecovered=_useState22[0],setCountryHistRecovered=_useState22[1];var _useState23=useState({flag:\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Question_mark_%28black%29.svg/200px-Question_mark_%28black%29.svg.png\"}),_useState24=_slicedToArray(_useState23,2),countryDataDetails=_useState24[0],setCountryDataDetails=_useState24[1];var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),isLoading=_useState26[0],setIsLoading=_useState26[1];// Fetch Worldwide Data\nuseEffect(function(){var fetchItems=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var resp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setIsLoading(true);_context.next=4;return axios.get(\"https://disease.sh/v3/covid-19/all\");case 4:resp=_context.sent;setWorldwideData(resp.data);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 11:setIsLoading(false);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function fetchItems(){return _ref2.apply(this,arguments);};}();fetchItems();},[]);// Fetch Country Data by name\nuseEffect(function(){var fetchItems=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var resp;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;setIsLoading(true);_context2.next=4;return axios.get(\"https://disease.sh/v3/covid-19/countries/\".concat(countryData.country));case 4:resp=_context2.sent;setCountryData(resp.data);setCountryDataDetails(resp.data.countryInfo);_context2.next=14;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);document.getElementById('flag').src='https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Question_mark_%28black%29.svg/200px-Question_mark_%28black%29.svg.png';document.getElementById('flag_txt').innerHTML='Incorrect Result.';case 14:setIsLoading(false);case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function fetchItems(){return _ref3.apply(this,arguments);};}();fetchItems();},[countryData.country]);// Fetch All Countries Data\nuseEffect(function(){var fetchItems=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var resp;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;setIsLoading(true);_context3.next=4;return axios.get(\"https://disease.sh/v3/covid-19/countries\");case 4:resp=_context3.sent;setCountriesData(resp.data);_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.error(_context3.t0);case 11:setIsLoading(false);case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function fetchItems(){return _ref4.apply(this,arguments);};}();fetchItems();},[]);// Fetch Worldwide Historical Data\nuseEffect(function(){var fetchItems=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var resp;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;setIsLoading(true);_context4.next=4;return axios.get(\"https://disease.sh/v3/covid-19/historical/all\");case 4:resp=_context4.sent;setWorldHistCases(resp.data.cases);setWorldHistDeaths(resp.data.deaths);setWorldHistRecovered(resp.data.recovered);_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 13:setIsLoading(false);case 14:case\"end\":return _context4.stop();}}},_callee4,null,[[0,10]]);}));return function fetchItems(){return _ref5.apply(this,arguments);};}();fetchItems();},[]);// Fetch Country Historical Data by name\nuseEffect(function(){var fetchItems=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var resp;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;setIsLoading(true);_context5.next=4;return axios.get(\"https://disease.sh/v3/covid-19/historical/\".concat(countryHist.country));case 4:resp=_context5.sent;setCountryHist(resp.data);setCountryHistCases(resp.data.timeline.cases);setCountryHistDeaths(resp.data.timeline.deaths);setCountryHistRecovered(resp.data.timeline.recovered);_context5.next=14;break;case 11:_context5.prev=11;_context5.t0=_context5[\"catch\"](0);console.log(_context5.t0);case 14:setIsLoading(false);case 15:case\"end\":return _context5.stop();}}},_callee5,null,[[0,11]]);}));return function fetchItems(){return _ref6.apply(this,arguments);};}();fetchItems();},[countryHist.country]);return/*#__PURE__*/React.createElement(DataContext.Provider,{value:{worldwideData:[worldwideData,setWorldwideData],showWorldwideData:[showWorldwideData,setShowWorldwideData],worldHistCases:[worldHistCases,setWorldHistCases],worldHistDeaths:[worldHistDeaths,setWorldHistDeaths],worldHistRecovered:[worldHistRecovered,setWorldHistRecovered],countriesData:[countriesData,setCountriesData],countryData:[countryData,setCountryData],countryDataDetails:[countryDataDetails,setCountryDataDetails],countryHist:[countryHist,setCountryHist],countryHistCases:[countryHistCases,setCountryHistCases],countryHistDeaths:[countryHistDeaths,setCountryHistDeaths],countryHistRecovered:[countryHistRecovered,setCountryHistRecovered],isLoading:[isLoading,setIsLoading]}},children);};export default DataContextProvider;","map":{"version":3,"sources":["C:/Users/Salam/react-learnspace/react-covid-19/src/contexts/DataContext.js"],"names":["React","createContext","useState","useEffect","axios","DataContext","DataContextProvider","children","worldwideData","setWorldwideData","worldHistCases","setWorldHistCases","worldHistDeaths","setWorldHistDeaths","worldHistRecovered","setWorldHistRecovered","showWorldwideData","setShowWorldwideData","countriesData","setCountriesData","country","countryData","setCountryData","countryHist","setCountryHist","countryHistCases","setCountryHistCases","countryHistDeaths","setCountryHistDeaths","countryHistRecovered","setCountryHistRecovered","flag","countryDataDetails","setCountryDataDetails","isLoading","setIsLoading","fetchItems","get","resp","data","console","log","countryInfo","document","getElementById","src","innerHTML","error","cases","deaths","recovered","timeline"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const DataContext = createContext();\r\n\r\n\r\nconst DataContextProvider = ({ children }) => {\r\n    const [worldwideData, setWorldwideData] = useState({});\r\n    const [worldHistCases, setWorldHistCases] = useState({});\r\n    const [worldHistDeaths, setWorldHistDeaths] = useState({});\r\n    const [worldHistRecovered, setWorldHistRecovered] = useState({});\r\n    const [showWorldwideData, setShowWorldwideData] = useState(true);\r\n    const [countriesData, setCountriesData] = useState([]);\r\n    const [countryData, setCountryData] = useState({ country: \"Morocco\" });\r\n    const [countryHist, setCountryHist] = useState({ country: \"Morocco\" });\r\n    const [countryHistCases, setCountryHistCases] = useState({});\r\n    const [countryHistDeaths, setCountryHistDeaths] = useState({});\r\n    const [countryHistRecovered, setCountryHistRecovered] = useState({});\r\n    const [countryDataDetails, setCountryDataDetails] = useState({ flag: \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Question_mark_%28black%29.svg/200px-Question_mark_%28black%29.svg.png\" });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // Fetch Worldwide Data\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const resp = await axios.get(`https://disease.sh/v3/covid-19/all`);\r\n                setWorldwideData(resp.data)\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n        fetchItems();\r\n    }, [])\r\n\r\n    // Fetch Country Data by name\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const resp = await axios.get(`https://disease.sh/v3/covid-19/countries/${countryData.country}`);\r\n                setCountryData(resp.data)\r\n                setCountryDataDetails(resp.data.countryInfo)\r\n            } catch (err) {\r\n                console.log(err)\r\n                document.getElementById('flag').src = 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Question_mark_%28black%29.svg/200px-Question_mark_%28black%29.svg.png';\r\n                document.getElementById('flag_txt').innerHTML = 'Incorrect Result.'\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n        fetchItems();\r\n    }, [countryData.country])\r\n\r\n    // Fetch All Countries Data\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const resp = await axios.get(`https://disease.sh/v3/covid-19/countries`);\r\n                setCountriesData(resp.data)\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n        fetchItems();\r\n    }, [])\r\n\r\n    // Fetch Worldwide Historical Data\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const resp = await axios.get(`https://disease.sh/v3/covid-19/historical/all`);\r\n                setWorldHistCases(resp.data.cases)\r\n                setWorldHistDeaths(resp.data.deaths)\r\n                setWorldHistRecovered(resp.data.recovered)\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n        fetchItems();\r\n    }, [])\r\n\r\n    // Fetch Country Historical Data by name\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const resp = await axios.get(`https://disease.sh/v3/covid-19/historical/${countryHist.country}`);\r\n                setCountryHist(resp.data)\r\n                setCountryHistCases(resp.data.timeline.cases)\r\n                setCountryHistDeaths(resp.data.timeline.deaths)\r\n                setCountryHistRecovered(resp.data.timeline.recovered)\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n        fetchItems();\r\n    }, [countryHist.country])\r\n\r\n    return (\r\n        <DataContext.Provider\r\n            value={{\r\n                worldwideData: [worldwideData, setWorldwideData],\r\n                showWorldwideData: [showWorldwideData, setShowWorldwideData],\r\n                worldHistCases: [worldHistCases, setWorldHistCases],\r\n                worldHistDeaths: [worldHistDeaths, setWorldHistDeaths],\r\n                worldHistRecovered: [worldHistRecovered, setWorldHistRecovered],\r\n                countriesData: [countriesData, setCountriesData],\r\n                countryData: [countryData, setCountryData],\r\n                countryDataDetails: [countryDataDetails, setCountryDataDetails],\r\n                countryHist: [countryHist, setCountryHist],\r\n                countryHistCases: [countryHistCases, setCountryHistCases],\r\n                countryHistDeaths: [countryHistDeaths, setCountryHistDeaths],\r\n                countryHistRecovered: [countryHistRecovered, setCountryHistRecovered],\r\n                isLoading: [isLoading, setIsLoading]\r\n            }}\r\n        >\r\n            {children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DataContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}